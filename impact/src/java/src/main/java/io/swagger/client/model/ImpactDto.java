/*
 * Impact
 * Here you can find documentation and examples for Greenspark Impact API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ImpactPurchase;
import io.swagger.client.model.Metadata;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ImpactDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-16T21:39:43.157+01:00[Europe/Budapest]")
public class ImpactDto {
  @SerializedName("impactPurchases")
  private List<ImpactPurchase> impactPurchases = new ArrayList<ImpactPurchase>();

  @SerializedName("metadata")
  private List<Metadata> metadata = null;

  public ImpactDto impactPurchases(List<ImpactPurchase> impactPurchases) {
    this.impactPurchases = impactPurchases;
    return this;
  }

  public ImpactDto addImpactPurchasesItem(ImpactPurchase impactPurchasesItem) {
    this.impactPurchases.add(impactPurchasesItem);
    return this;
  }

   /**
   * The impactPurchases array contains your spending on a specific purpose.
   * @return impactPurchases
  **/
  @Schema(required = true, description = "The impactPurchases array contains your spending on a specific purpose.")
  public List<ImpactPurchase> getImpactPurchases() {
    return impactPurchases;
  }

  public void setImpactPurchases(List<ImpactPurchase> impactPurchases) {
    this.impactPurchases = impactPurchases;
  }

  public ImpactDto metadata(List<Metadata> metadata) {
    this.metadata = metadata;
    return this;
  }

  public ImpactDto addMetadataItem(Metadata metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<Metadata>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

   /**
   * In the metadata array you can store up to 10 key-value pairs. You can use them to associate arbitrary data with your impact.
   * @return metadata
  **/
  @Schema(description = "In the metadata array you can store up to 10 key-value pairs. You can use them to associate arbitrary data with your impact.")
  public List<Metadata> getMetadata() {
    return metadata;
  }

  public void setMetadata(List<Metadata> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImpactDto impactDto = (ImpactDto) o;
    return Objects.equals(this.impactPurchases, impactDto.impactPurchases) &&
        Objects.equals(this.metadata, impactDto.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(impactPurchases, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImpactDto {\n");
    
    sb.append("    impactPurchases: ").append(toIndentedString(impactPurchases)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
