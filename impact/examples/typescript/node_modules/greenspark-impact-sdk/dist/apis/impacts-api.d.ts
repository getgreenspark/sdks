/**
 * Impact
 * Here you can find documentation and examples for Greenspark Impact API
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ImpactDto } from '../models';
/**
 * ImpactsApi - axios parameter creator
 * @export
 */
export declare const ImpactsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates an impact associated with a source and a trigger.
     * @summary Create Impact
     * @param {ImpactDto} body
     * @param {string} sourceId The id of the source associated with the impact.
     * @param {string} triggerId The id of the trigger associated with the impact.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    impactsControllerCreateImpact: (body: ImpactDto, sourceId: string, triggerId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Creates an impact associated wit a user id.
     * @summary Create Tailored Impact
     * @param {ImpactDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    impactsControllerCreateTailoredImpact: (body: ImpactDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ImpactsApi - functional programming interface
 * @export
 */
export declare const ImpactsApiFp: (configuration?: Configuration) => {
    /**
     * Creates an impact associated with a source and a trigger.
     * @summary Create Impact
     * @param {ImpactDto} body
     * @param {string} sourceId The id of the source associated with the impact.
     * @param {string} triggerId The id of the trigger associated with the impact.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    impactsControllerCreateImpact(body: ImpactDto, sourceId: string, triggerId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Creates an impact associated wit a user id.
     * @summary Create Tailored Impact
     * @param {ImpactDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    impactsControllerCreateTailoredImpact(body: ImpactDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
};
/**
 * ImpactsApi - factory interface
 * @export
 */
export declare const ImpactsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates an impact associated with a source and a trigger.
     * @summary Create Impact
     * @param {ImpactDto} body
     * @param {string} sourceId The id of the source associated with the impact.
     * @param {string} triggerId The id of the trigger associated with the impact.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    impactsControllerCreateImpact(body: ImpactDto, sourceId: string, triggerId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Creates an impact associated wit a user id.
     * @summary Create Tailored Impact
     * @param {ImpactDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    impactsControllerCreateTailoredImpact(body: ImpactDto, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
};
/**
 * ImpactsApi - object-oriented interface
 * @export
 * @class ImpactsApi
 * @extends {BaseAPI}
 */
export declare class ImpactsApi extends BaseAPI {
    /**
     * Creates an impact associated with a source and a trigger.
     * @summary Create Impact
     * @param {ImpactDto} body
     * @param {string} sourceId The id of the source associated with the impact.
     * @param {string} triggerId The id of the trigger associated with the impact.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImpactsApi
     */
    impactsControllerCreateImpact(body: ImpactDto, sourceId: string, triggerId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Creates an impact associated wit a user id.
     * @summary Create Tailored Impact
     * @param {ImpactDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImpactsApi
     */
    impactsControllerCreateTailoredImpact(body: ImpactDto, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
}
